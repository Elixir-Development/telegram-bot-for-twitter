= 准备工作
陈三
:icons: font
:!webfonts:
:toc:
:source-highlighter: pygments

== 准备开发环境

我目前使用的操作系统是 macOS，macOS 上可以借助 https://brew.sh[homebrew] 安装 Elixir：

```bash
$ brew install elixir
```

TIP: 通常我们要先安装 Erlang，这里没有提到 Erlang 的安装是因为 `brew install elixir` 命令帮我们一并安装好了。

安装完 Elixir 及 Erlang 后，我们可以通过 `mix hex.info` 命令查看它们的版本号：

```bash
$ mix hex.info
Hex:    0.18.1
Elixir: 1.7.3
OTP:    21.0.9

Built with: Elixir 1.6.6 and OTP 19.3
```

随后运行 mix 命令安装 Phoenix：

```bash
$ mix archive.install hex phx_new 1.4.0
```

`mix phx.new --version` 可以查看当前安装的 Phoenix 版本号：

```bash
$ mix phx.new --version
Phoenix v1.4.0
```
至于 Node.js - 我作为一个专职前端开发，当然是早已安装：

```bash
$ node -v
v8.11.1
```

== 初始化项目

开发环境准备就绪后，执行 `mix phx.new` 命令初始化我们的发推机器人项目：

```bash
$ mix phx.new tweet_bot
```
Phoenix 默认使用 PostgreSQL 数据库，如果你想使用 MySQL，请在命令行下额外指定 `--database mysql`。

项目初始化成功后，我们会在命令行中看到如下提示：

```bash
We are all set! Go into your application by running:

    $ cd tweet_bot

Then configure your database in config/dev.exs and run:

    $ mix ecto.create

Start your Phoenix app with:

    $ mix phx.server

You can also run your app inside IEx (Interactive Elixir) as:

    $ iex -S mix phx.server
```
按提示操作，就能在 http://0.0.0.0:4000 上启动 Phoenix 开发服务器。

== 创建 telegram bot

我需要创建两个 telegram 机器人，一个用于开发环境，一个用于生产环境：

. https://t.me/tweet_for_me_test_bot[https://t.me/tweet_for_me_test_bot] - 开发用途
. https://t.me/tweet_for_me_bot[https://t.me/tweet_for_me_bot] - 生产环境使用

具体的创建 telegram 机器人过程请查阅 https://core.telegram.org/bots#3-how-do-i-create-a-bot[telegram 文档]，这里略过不表。

创建好 telegram 机器人，我们将获得一串 `token`，后面我们将会使用这串 `token` 设置一个 https://core.telegram.org/bots/api#setwebhook[webhook]。